#pragma checksum "E:\BangbangFuli\source2\BangBangFuli.API.MVCDotnet2\Views\Users\UserList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "402deaf7f6daf39e045eccae877b8bb631eda5b6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Users_UserList), @"mvc.1.0.view", @"/Views/Users/UserList.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Users/UserList.cshtml", typeof(AspNetCore.Views_Users_UserList))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\BangbangFuli\source2\BangBangFuli.API.MVCDotnet2\Views\_ViewImports.cshtml"
using BangBangFuli.API.MVCDotnet2;

#line default
#line hidden
#line 2 "E:\BangbangFuli\source2\BangBangFuli.API.MVCDotnet2\Views\_ViewImports.cshtml"
using BangBangFuli.API.MVCDotnet2.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"402deaf7f6daf39e045eccae877b8bb631eda5b6", @"/Views/Users/UserList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"869bc3105167e9dd4b3ce0ee5ffc553ce1a63b36", @"/Views/_ViewImports.cshtml")]
    public class Views_Users_UserList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\BangbangFuli\source2\BangBangFuli.API.MVCDotnet2\Views\Users\UserList.cshtml"
  
    ViewData["Title"] = "用户管理";
    Layout = "~/BasePages/_Layout.cshtml";

#line default
#line hidden
            BeginContext(86, 1128, true);
            WriteLiteral(@"<blockquote class=""layui-elem-quote"">
    用户管理中展示了所有的用户信息，可以进行删除添加等操作
    <a class=""layui-btn layui-btn-normal"" href=""/Users/AddUser"">添加用户</a>
</blockquote>
<table class=""layui-table"" lay-data=""{height:600, url:'/Users/UserListData', page:true, id:'idTest'}"" lay-filter=""demo"">
    <thead>
        <tr>
            <th lay-data=""{field:'id', width:80, sort: true, fixed: true}"">ID</th>
            <th lay-data=""{field:'userName', width:80}"">用户名</th>
            <th lay-data=""{field:'name', width:180, sort: true}"">姓名</th>
            <th lay-data=""{field:'telPhone', width:180}"">电话号</th>
            <th lay-data=""{field:'roleName', width:177}"">角色</th>
            <th lay-data=""{field:'createTime', width:177}"">创建时间</th>
            <th lay-data=""{fixed: 'right', width:200, align:'center', toolbar: '#barDemo'}""></th>
        </tr>
    </thead>
</table>
<script type=""text/html"" id=""barDemo"">
    <div class=""layui-btn-group"">
        <a class=""layui-btn layui-btn-mini"" lay-event=""edity"">编辑</a>
    ");
            WriteLiteral("    <a class=\"layui-btn layui-btn-danger layui-btn-mini\" lay-event=\"del\">删除</a>\r\n    </div>\r\n</script>\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(1231, 1491, true);
                WriteLiteral(@" 
    <script type=""text/javascript"">
        var layer 
        layui.use(['laypage', 'layer', 'table', 'element'], function () {
            layer = layui.layer
            table = layui.table
            laypage = layui.laypage

            //监听工具条
            table.on('tool(demo)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter=""对应的值""
                var data = obj.data //获得当前行数据
                    , layEvent = obj.event; //获得 lay-event 对应的值
                if (layEvent === 'del') {
                    layer.confirm('真的删除么', function (index) {
                        if (data.name == '系统管理员') {
                            layer.msg('系统管理员不能删除', { icon: 2});
                            return
                         }
                        $.get('/Users/DelUser?id=' + data.id, function (res) {
                            if (res.code == 1) {
                                obj.del(); //删除对应行（tr）的DOM结构
                                layer.close(index);
             ");
                WriteLiteral(@"                   layer.msg('删除成功', { icon: 6 });
                            } else { 
                                layer.msg('删除失败', { icon: 5 });
                            }
                         })
                        //向服务端发送删除指令
                    });
                } else if (layEvent === 'edity') {
                    window.location = '/Users/AddUser?id=' + data.id;
                 }
            });
        });
    </script>
");
                EndContext();
            }
            );
            BeginContext(2725, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
