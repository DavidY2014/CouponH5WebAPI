@model ProductInformationViewModel
@{
    ViewData["Title"] = "添加商品";
}
<h4>商品信息</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateSave" enctype="multipart/form-data" asp-controller="Product" method="post" class="mt-3">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductCode" class="control-label"></label>
                <input asp-for="ProductCode" class="form-control" />
                <span asp-validation-for="ProductCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="BatchId" class="control-label"></label>
                <select asp-for="BatchId" class="form-control" asp-items="ViewBag.BatchIds">
                    <option value="">-- 选择批次 --</option>
                </select>
                <span asp-validation-for="BatchId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ClassType" class="control-label"></label>
                <select asp-for="ClassType" class="form-control" asp-items="ViewBag.Catelogs">
                    <option value="">-- 选择类型 --</option>
                </select>
                <span asp-validation-for="ClassType" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="ProductStatus" class="control-label"></label>
                <select asp-for="ProductStatus" class="form-control" asp-items="ViewBag.ProductStatusTypes">
                    <option value="">-- 选择状态 --</option>
                </select>
                <span asp-validation-for="ProductStatus" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="StockStatus" class="control-label"></label>
                <select asp-for="StockStatus" class="form-control" asp-items="ViewBag.StockStatusTypes">
                    <option value="">-- 选择库存状态 --</option>
                </select>
                <span asp-validation-for="StockStatus" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <label asp-for="Photos" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <div class="custom-file">
                        <input asp-for="Photos" multiple class="form-control custom-file-input">
                        <label class="custom-file-label">请选择照片....</label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="添加" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="editor-area" width="500px">
        <div>
            <h2>商品描述</h2>
            <script id="editor" type="text/plain" style="height:500px;">
            </script>
        </div>
        <div id="btns">
            <button onclick="getContent()" class="btn btn-primary">保存富文本内容</button>
        </div>
    </div>
    <br>
    <div>
        <a asp-action="Index" class="btn btn-default">返回列表</a>
    </div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        var ue = UE.getEditor('editor');

        function isFocus(e) {
            alert(UE.getEditor('editor').isFocus());
            UE.dom.domUtils.preventDefault(e)
        }
        function setblur(e) {
            UE.getEditor('editor').blur();
            UE.dom.domUtils.preventDefault(e)
        }
        function insertHtml() {
            var value = prompt('插入html代码', '');
            UE.getEditor('editor').execCommand('insertHtml', value)
        }
        function createEditor() {
            enableBtn();
            UE.getEditor('editor');
        }
        function getAllHtml() {
            alert(UE.getEditor('editor').getAllHtml())
        }
        function getContent() {
            var arr = [];
            arr.push(UE.getEditor('editor').getContent());
            $.post("../Product/SaveProductDescription", { description: arr }, function (result) {
            });
        }
        function getPlainTxt() {
            var arr = [];
            arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
            arr.push("内容为：");
            arr.push(UE.getEditor('editor').getPlainTxt());
            alert(arr.join('\n'))
        }
        function setContent(isAppendTo) {
            var arr = [];
            arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
            UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
            alert(arr.join("\n"));
        }
        function setDisabled() {
            UE.getEditor('editor').setDisabled('fullscreen');
            disableBtn("enable");
        }

        function setEnabled() {
            UE.getEditor('editor').setEnabled();
            enableBtn();
        }

        function getText() {
            //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
            var range = UE.getEditor('editor').selection.getRange();
            range.select();
            var txt = UE.getEditor('editor').selection.getText();
            alert(txt)
        }

        function getContentTxt() {
            var arr = [];
            arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
            arr.push("编辑器的纯文本内容为：");
            arr.push(UE.getEditor('editor').getContentTxt());
            alert(arr.join("\n"));
        }
        function hasContent() {
            var arr = [];
            arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
            arr.push("判断结果为：");
            arr.push(UE.getEditor('editor').hasContents());
            alert(arr.join("\n"));
        }
        function setFocus() {
            UE.getEditor('editor').focus();
        }
        function deleteEditor() {
            disableBtn();
            UE.getEditor('editor').destroy();
        }
        function disableBtn(str) {
            var div = document.getElementById('btns');
            var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
            for (var i = 0, btn; btn = btns[i++];) {
                if (btn.id == str) {
                    UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                } else {
                    btn.setAttribute("disabled", "true");
                }
            }
        }
        function enableBtn() {
            var div = document.getElementById('btns');
            var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
            for (var i = 0, btn; btn = btns[i++];) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            }
        }

        function getLocalData() {
            alert(UE.getEditor('editor').execCommand("getlocaldata"));
        }

        function clearLocalData() {
            UE.getEditor('editor').execCommand("clearlocaldata");
            alert("已清空草稿箱")
        }

        $(document).ready(function () {

            $('.custom-file-input').on("change", function () {

                console.log($(this));
                //var fileName = $(this).val().split("\\").pop();
                //$(this).next(".custom-file-label").html(fileName);


                var fileLabel = $(this).next(".custom-file-label");

                var files = $(this)[0].files;

                if (files.length > 1) {

                    fileLabel.html("您已经选择了" + files.length + "个文件");
                } else {
                    fileLabel.html(files[0].name);
                }




            });


        });</script>
}
